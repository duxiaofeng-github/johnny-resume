@util: `function(){
  return {
    randomInt: function(min, max) {
      return Math.floor(Math.random() * (max - min)) + min
    },
    randomOne: function(array) {
      var min = 0;
      var max = array.length - 1;
      var index = this.randomInt(min, max);
      return array[index];
    },
    shuffle: function(array) {
      array.sort(function(a,b){ return Math.random()>.5 ? -1 : 1;});
      return array;
    }
  }
}`;

@typingCaculator: `function(){
  var calc = {
    interval: 0.22,
    fadeoutDuration: 1,
    charCount: function(count) {
      switch(count) {
        case 1:
          return 2;
        case 2:
          return 5;
        case 3:
          return 6;
        case 4:
          return 7;
        case 5:
          return 4;
        default:
          return 0;
      }
    },
    typingDelay: function(preDuration) {
      return preDuration + 0.5;
    },
    typingDuration: function(charCount) {
      return charCount * this.interval;
    },
    fadeoutDelay: function(delay, duration) {
      return delay + duration + 1;
    },
    typingCompleteAt: function(count) {
      var time = 0;
      for(i=1;i<=count;i++) {
        var charCount = this.charCount(i);
        var delay = this.typingDelay(time);
        var duration = this.typingDuration(charCount);
        var fadeoutDelay = this.fadeoutDelay(delay, duration);
        time = fadeoutDelay + this.fadeoutDuration;
      }
      return time;
    },
  };

  return calc;
}`;

@spotCaculator: `function(){
  return {
    getAbsDeg: function(deg) {
      if(deg < 0){
        return 0 - deg;
      }else if(deg <= 90){
        return deg;
      }else if(deg <= 180){
        return 180 - deg;
      }else if(deg <= 270){
        return deg - 180;
      }else if(deg <= 360){
        return 360 - deg;
      }else{
        return deg - 360;
      }
    },
    getTransitionLeft: function(deg) {
      switch(deg){
        case 120:
        case 180:
        case 240:
          return 'calc(0% - 5vmax)';
        case 60:
        case 300:
        case 360:
          return 'calc(100% + 5vmax)';
        default:
          return 0;
      }
    },
    getTransitionTop: function(deg) {
      switch(deg){
        case 60:
        case 120:
          return 'calc(0% - 5vmax)';
        case 180:
        case 360:
          return '50%';
        case 240:
        case 300:
          return 'calc(100% + 5vmax)';
        default:
          return 0;
      }
    }
  }
}`;

@layoutCaculator: `function(){
  return {
    getContainerLeft: function(deg) {
      switch(deg){
        case 120:
        case 180:
        case 240:
          return 0;
        case 60:
        case 300:
        case 360:
          return 66.66;
        default:
          return 0;
      }
    },
    getContainerTop: function(deg) {
      switch(deg){
        case 60:
        case 120:
          return 0;
        case 180:
        case 360:
          return 33.33;
        case 240:
        case 300:
          return 66.66;
        default:
          return 0;
      }
    },
    getBgTransitionTop: function(deg) {
      switch(deg){
        case 60:
        case 120:
          return 0;
        case 180:
        case 360:
          return -100;
        case 240:
        case 300:
          return -200;
        default:
          return 0;
      }
    },
    getBgTransitionLeft: function(deg) {
      switch(deg){
        case 120:
        case 180:
        case 240:
          return 0;
        case 60:
        case 300:
        case 360:
          return -200;
        default:
          return 0;
      }
    }
  }
}`;

@di: `(function() {
  this.util = (@{util})();

  this.typingCaculator = (@{typingCaculator})();

  this.spotCaculator = (@{spotCaculator})();

  this.layoutCaculator = (@{layoutCaculator})();

  return "Injected in global";

})()` ;
